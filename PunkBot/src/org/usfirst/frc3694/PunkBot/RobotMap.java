// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3694.PunkBot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Victor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController chassischassisFrontLeftDrive;
    public static SpeedController chassischassisRearLeftDrive;
    public static SpeedController chassischassisFrontRightDrive;
    public static SpeedController chassischassisRearRightDrive;
    public static SpeedController climberClimbMotor;
    public static RobotDrive chassisRobotDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
       chassischassisFrontLeftDrive = new Victor(0);
       LiveWindow.addActuator("Chassis", "chassisHopper", (Victor) chassischassisFrontLeftDrive);
        
        climberClimbMotor = new Victor(4);
        LiveWindow.addActuator("Chassis", "Hopper", (Victor) climberClimbMotor);
        
        chassischassisRearRightDrive = new Victor(5);
        LiveWindow.addActuator("Chassis", "chassisRearRightDrive", (Victor) chassischassisRearRightDrive);
        
        chassischassisFrontRightDrive = new Victor(3);
        LiveWindow.addActuator("Chassis", "chassisFrontLeftDrive", (Victor) chassischassisFrontRightDrive);
       
        chassischassisRearLeftDrive = new Victor(1);
        LiveWindow.addActuator("Chassis", "chassisRearLeftDrive", (Victor) chassischassisRearLeftDrive);
        chassisRobotDrive = new RobotDrive(chassischassisFrontLeftDrive, chassischassisRearLeftDrive,
              chassischassisFrontRightDrive, chassischassisRearRightDrive);
        chassisRobotDrive.setSafetyEnabled(true);
        chassisRobotDrive.setExpiration(0.1);
        chassisRobotDrive.setSensitivity(0.5);
        chassisRobotDrive.setMaxOutput(1.0);

        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
